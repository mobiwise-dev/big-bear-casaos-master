# ███╗   ███╗ ██████╗ ██████╗ ██╗██╗    ██╗██╗███████╗███████╗
# ████╗ ████║██╔═══██╗██╔══██╗██║██║    ██║██║██╔════╝██╔════╝
# ██╔████╔██║██║   ██║██████╔╝██║██║ █╗ ██║██║███████╗█████╗
# ██║╚██╔╝██║██║   ██║██╔══██╗██║██║███╗██║██║╚════██║██╔══╝
# ██║ ╚═╝ ██║╚██████╔╝██████╔╝██║╚███╔███╔╝██║███████║███████╗
# ╚═╝     ╚═╝ ╚═════╝ ╚═════╝ ╚═╝ ╚══╝╚══╝ ╚═╝╚══════╝╚══════╝
# MobiWise Supabase - 1.0.0 - 20250315 - https://mobiwise.dev

name: mobiwise-supabase

services:
  #############################################################################
  # Kong (API Gateway)
  #############################################################################
  kong:
    container_name: supabase-kong
    image: kong:2.8.5
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - /DATA/AppData/$AppID/volumes/api/kong.yml:/home/kong/temp.yml:ro
    depends_on:
      analytics:
        condition: service_healthy
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: "64 160k"
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
      DASHBOARD_USERNAME: supabase
      DASHBOARD_PASSWORD: this_password_is_insecure_and_should_be_updated
    entrypoint: >
      bash -c 'eval "echo \"$$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start'

    x-casaos: # CasaOS specific configuration #################################
      envs:
        - container: SUPABASE_ANON_KEY
          description:
            en_us: Supabase ANON Key
            fr_fr: Clé ANON Supabase
        - container: SUPABASE_SERVICE_KEY
          description:
            en_us: Supabase Service Key
            fr_fr: Clé de service Supabase
        - container: DASHBOARD_USERNAME
          description:
            en_us: Dashboard username
            fr_fr: Nom utilisateur du tableau de bord
        - container: DASHBOARD_PASSWORD
          description:
            en_us: Password for the dashboard
            fr_fr: Mot de passe du tableau de bord
      volumes:
        - container: /home/kong/kong.yml
          description:
            en_us: "Container Path: /home/kong/kong.yml"
      ports:
        - container: "8000"
          description:
            en_us: "Container Port: 8000"
            fr_fr: "Port du conteneur: 8000"

  #############################################################################
  # Supabase Studio (main interface)
  #############################################################################
  studio:
    container_name: supabase-studio
    image: supabase/studio:20250310-6a23794
    restart: unless-stopped
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3000/api/platform/profile').then((r) => { if (r.status !== 200) throw new Error(r.status) })"]
      timeout: 10s
      interval: 5s
      retries: 3
    depends_on:
      analytics:
        condition: service_healthy
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: your-super-secret-and-long-postgres-password

      DEFAULT_ORGANIZATION_NAME: Default Organization
      DEFAULT_PROJECT_NAME: Default Project

      OPENAI_API_KEY: OPENAI_API_KEY_00000

      SUPABASE_URL: http://kong:8000
      SUPABASE_PUBLIC_URL: http://localhost:8000

      AUTH_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q

      LOGFLARE_API_KEY: your-super-secret-and-long-logflare-key
      LOGFLARE_URL: http://analytics:4000
      NEXT_PUBLIC_ENABLE_LOGS: true
      NEXT_ANALYTICS_BACKEND_PROVIDER: postgres # or bigquery

    x-casaos: # CasaOS specific configuration #################################
      envs:
        - container: POSTGRES_PASSWORD
          description:
            en_us: The password for the Postgres database
            fr_fr: Le mot de passe de la base de données Postgres

        - container: DEFAULT_ORGANIZATION_NAME
          description:
            en_us: The default organization name for Supabase Studio
            fr_fr: Le nom de l'organisation par défaut pour Supabase Studio
        - container: DEFAULT_PROJECT_NAME
          description:
            en_us: The default project name for Supabase Studio
            fr_fr: Le nom du projet par défaut pour Supabase Studio

        - container: OPENAI_API_KEY
          description:
            en_us: The OpenAI API key for Supabase Studio
            fr_fr: La clé API OpenAI pour Supabase Studio

        - container: SUPABASE_PUBLIC_URL
          description:
            en_us: The public URL for Supabase Studio
            fr_fr: L'URL publique pour Supabase Studio

        - container: AUTH_JWT_SECRET
          description:
            en_us: The JWT secret for Supabase
            fr_fr: Le secret JWT pour Supabase
        - container: SUPABASE_ANON_KEY
          description:
            en_us: The anonymous key for Supabase (to genertate, visit https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys)
            fr_fr: La clé anonyme pour Supabase (pour générer, visitez https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys)
        - container: SUPABASE_SERVICE_KEY
          description:
            en_us: The service role key for Supabase (to genertate, visit https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys)
            fr_fr: La clé de rôle de service pour Supabase (to genertate, visit https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys)

        - container: LOGFLARE_API_KEY
          description:
            en_us: The Logflare API key for Supabase Studio
            fr_fr: La clé API Logflare pour Supabase Studio

        - container: NEXT_PUBLIC_ENABLE_LOGS
          description:
            en_us: Enable logs in Supabase Studio
            fr_fr: Activer les logs dans Supabase Studio
        - container: NEXT_ANALYTICS_BACKEND_PROVIDER
          description:
            en_us: The analytics backend provider for Supabase Studio (postgres or bigquery)
            fr_fr: Le fournisseur d'analyse backend pour Supabase Studio (postgres ou bigquery)
      ports:
        - container: "3000"
          description:
            en_us: "Container Port: 3000"
            fr_fr: "Port du conteneur: 3000"

  #############################################################################
  # DB internal (Supabase/Postgres)
  #############################################################################
  db:
    container_name: supabase-db
    image: supabase/postgres:15.8.1.048
    restart: unless-stopped
    volumes:
      - /DATA/AppData/$AppID/volumes/db/realtime.sql:/docker-entrypoint-initdb.d/migrations/99-realtime.sql:Z
      - /DATA/AppData/$AppID/volumes/db/webhooks.sql:/docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql:Z
      - /DATA/AppData/$AppID/volumes/db/roles.sql:/docker-entrypoint-initdb.d/init-scripts/99-roles.sql:Z
      - /DATA/AppData/$AppID/volumes/db/jwt.sql:/docker-entrypoint-initdb.d/init-scripts/99-jwt.sql:Z
      - /DATA/AppData/$AppID/volumes/db/data:/var/lib/postgresql/data:Z
      - /DATA/AppData/$AppID/volumes/db/_supabase.sql:/docker-entrypoint-initdb.d/migrations/97-_supabase.sql:Z
      - /DATA/AppData/$AppID/volumes/db/logs.sql:/docker-entrypoint-initdb.d/migrations/99-logs.sql:Z
      - /DATA/AppData/$AppID/volumes/db/pooler.sql:/docker-entrypoint-initdb.d/migrations/99-pooler.sql:Z
      - /DATA/AppData/$AppID/volumes/db/postgresql-custom:/etc/postgresql-custom:Z

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      vector:
        condition: service_healthy
    environment:
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: 5432
      POSTGRES_PORT: 5432
      PGPASSWORD: your-super-secret-and-long-postgres-password
      POSTGRES_PASSWORD: your-super-secret-and-long-postgres-password
      PGDATABASE: postgres
      POSTGRES_DB: postgres
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      JWT_EXP: 3600
    # command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf", "-c", "log_min_messages=fatal"]
    command: ["postgres", "-c", "config_file=/etc/postgresql-custom/postgresql.conf", "-c", "log_min_messages=fatal"]

    x-casaos: # CasaOS specific configuration #################################
      envs:
        - container: PGPORT
          description:
            en_us: The Postgres port
            fr_fr: Le port Postgres
        - container: POSTGRES_PORT
          description:
            en_us: The Postgres port
            fr_fr: Le port Postgres
        - container: PGPASSWORD
          description:
            en_us: The Postgres password
            fr_fr: Le mot de passe Postgres
        - container: POSTGRES_PASSWORD
          description:
            en_us: The Postgres password
            fr_fr: Le mot de passe Postgres
        - container: PGDATABASE
          description:
            en_us: The Postgres database
            fr_fr: La base de données Postgres
        - container: POSTGRES_DB
          description:
            en_us: The Postgres database
            fr_fr: La base de données Postgres
        - container: JWT_SECRET
          description:
            en_us: The JWT secret
            fr_fr: Le secret JWT
        - container: JWT_EXP
          description:
            en_us: The JWT expiry
            fr_fr: L'expiration JWT
      volumes:
        - container: /var/lib/postgresql/data
          description:
            en_us: "Container Path: /var/lib/postgresql/data"
        - container: /etc/postgresql-custom
          description:
            en_us: "Container Path: /etc/postgresql-custom"
      ports:
        - container: "5432"
          description:
            en_us: "Container Port: 5432"

  #############################################################################
  # REST (PostgREST)
  #############################################################################
  rest:
    container_name: supabase-rest
    image: postgrest/postgrest:v12.2.8
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      analytics:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://authenticator:your-super-secret-and-long-postgres-password@db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_APP_SETTINGS_JWT_EXP: 3600
    command: ["postgrest"]

    x-casaos: # CasaOS specific configuration
      envs:
        - container: PGRST_DB_URI
          description:
            en_us: The database URI for PostgREST
            fr_fr: L'URI de la base de données pour PostgREST
        - container: PGRST_DB_SCHEMAS
          description:
            en_us: The database schemas for PostgREST
            fr_fr: Les schémas de base de données pour PostgREST
        - container: PGRST_JWT_SECRET
          description:
            en_us: The JWT secret for PostgREST
            fr_fr: Le secret JWT pour PostgREST
        - container: PGRST_APP_SETTINGS_JWT_SECRET
          description:
            en_us: The JWT secret for PostgREST app settings
            fr_fr: Le secret JWT pour les paramètres de l'application PostgREST
        - container: PGRST_APP_SETTINGS_JWT_EXP
          description:
            en_us: The JWT expiry for PostgREST app settings
            fr_fr: L'expiration JWT pour les paramètres de l'application PostgREST

  #############################################################################
  # Vector (log collection for analytics)
  #############################################################################
  vector:
    container_name: supabase-vector
    image: timberio/vector:latest-alpine
    restart: unless-stopped
    volumes:
      - /DATA/AppData/$AppID/volumes/vector/vector.yml:/etc/vector/vector.yml:ro
      - ${DOCKER_SOCKET_LOCATION:-/var/run/docker.sock}:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9001/health"]
      timeout: 5s
      interval: 5s
      retries: 3
    environment:
      LOGFLARE_API_KEY: your-super-secret-and-long-logflare-key
    command: ["--config", "/etc/vector/vector.yml"]

    x-casaos: # CasaOS specific configuration #################################
      envs:
        - container: LOGFLARE_API_KEY
          description:
            en_us: The API key for Vector
            fr_fr: La clé API pour Vector
      volumes:
        - container: /etc/vector/vector.yml
          description:
            en_us: "Configuration file for Vector"
            fr_fr: "Fichier de configuration pour Vector"

  #############################################################################
  # Analytics (Logflare)
  #############################################################################
  analytics:
    container_name: supabase-analytics
    image: supabase/logflare:1.12.4
    restart: unless-stopped
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "curl", "http://localhost:4000/health"]
      timeout: 5s
      interval: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
    environment:
      LOGFLARE_NODE_HOST: "127.0.0.1"
      DB_USERNAME: supabase_admin
      DB_DATABASE: _supabase
      DB_HOSTNAME: db
      DB_PORT: 5432
      DB_PASSWORD: your-super-secret-and-long-postgres-password
      DB_SCHEMA: _analytics
      LOGFLARE_API_KEY: your-super-secret-and-long-logflare-key
      LOGFLARE_SINGLE_TENANT: true
      LOGFLARE_SUPABASE_MODE: true
      LOGFLARE_MIN_CLUSTER_SIZE: 1

      POSTGRES_BACKEND_URL: postgresql://supabase_admin:your-super-secret-and-long-postgres-password@db:5432/_supabase
      POSTGRES_BACKEND_SCHEMA: _analytics
      LOGFLARE_FEATURE_FLAG_OVERRIDE: "multibackend=true"

    x-casaos: # CasaOS specific configuration #################################
      envs:
        - container: DB_USERNAME
          description:
            en_us: The database username for Logflare
            fr_fr: Le nom d'utilisateur de la base de données pour Logflare
        - container: DB_DATABASE
          description:
            en_us: The database for Logflare
            fr_fr: La base de données pour Logflare
        - container: DB_HOSTNAME
          description:
            en_us: The database hostname for Logflare
            fr_fr: Le nom d'hôte de la base de données pour Logflare
        - container: DB_PORT
          description:
            en_us: The database port for Logflare
            fr_fr: Le port de la base de données pour Logflare
        - container: DB_PASSWORD
          description:
            en_us: The database password for Logflare
            fr_fr: Le mot de passe de la base de données pour Logflare
        - container: LOGFLARE_API_KEY
          description:
            en_us: The API key for Logflare
            fr_fr: La clé API pour Logflare
      ports:
        - container: "4000"
          description:
            en_us: "Container Port: 4000"
            fr_fr: "Port du conteneur: 4000"

#############################################################################
# CasaOS Specific Configuration
#############################################################################
x-casaos:
  architectures:
    - amd64
    - arm
  main: kong # Main service of the application
  index: /
  port_map: "8000"

  author: MobiWise
  category: MobiWise
  developer: Supabase
  title:
    en_us: Supabase
  tagline:
    en_us: Open-source alternative to Firebase
    fr_fr: Une alternative open-source à Firebase
  description:
    en_us: Supabase is an open-source alternative to Firebase, providing authentication, databases, storage, and serverless functions.
    fr_fr: Supabase est une alternative open-source à Firebase, offrant authentification, bases de données, stockage et fonctions serverless.
  icon: https://cdn.jsdelivr.net/gh/mobiwise-dev/big-bear-casaos-master/Apps/supabase/supabase-logo-icon.png
  thumbnail: https://cdn.jsdelivr.net/gh/mobiwise-dev/big-bear-casaos-master/Apps/supabase/supabase-thumbnail.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/mobiwise-dev/big-bear-casaos-master/Apps/supabase/supabase-thumbnail.png
    - https://cdn.jsdelivr.net/gh/mobiwise-dev/big-bear-casaos-master/Apps/supabase/supabase-table-editor.png
  tips:
    before_install:
      en_us: |
        To generate your service and ANON keys, visit https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
      fr_fr: |
        Pour générer vos clés de service et ANON, https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
